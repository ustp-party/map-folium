### Credits
## https://github.com/mpetroff/accessible-color-cycles
## https://arxiv.org/abs/2107.02270
## https://github.com/hosilva/mplstyle

# see https://matplotlib.org/stable/tutorials/introductory/customizing.html

## ***************************************************************************
## * Preferred palette
## ***************************************************************************
## push_to_bg = '#DDDDDD'
## dark_gray = '#3b3b3b'
## gray = 'gray'
## light_gray = '#BFBFBF'
## dark_blue = '#072ea5'
## blue = "#5790fc"
## light_blue = '#91c2ed'
## light_orange = '#fbb181'
## orange = "#f89c20"
## dark_orange = '#ff3e06'
## dark_teal = '#299ba1'
## teal = '#2e99a2'
## light_teal = '#8af0dd'
## soft_red = ‘#ea6466’
## soft_black = ‘#333333’
## ***************************************************************************

### Colors
## https://arxiv.org/abs/2107.02270 - Color source
## https://github.com/mpetroff/accessible-color-cycles
axes.prop_cycle: cycler(color=["#5790fc", "#f89c20", "#e42536", "#964a8b", "#9c9ca1", "#7a21dd"])
# axes.prop_cycle: cycler(color=["#1845fb", "#ff5e02", "#c91f16", "#c849a9", "#adad7d", "#86c8dd", "#578dff", "#656364"])
# axes.prop_cycle: cycler(color=["#3f90da", "#ffa90e", "#bd1f01", "#94a4a2", "#832db6", "#a96b59", "#e76300", "#b9ac70", "#717581", "#92dadd"])

### Axes
axes.titlesize : x-large
axes.labelsize : medium
axes.formatter.use_mathtext : True
axes.axisbelow: True
axes.spines.bottom: True
axes.spines.top: True
axes.spines.left: True
axes.spines.right: True
axes.facecolor: ffffff  # white
axes.edgecolor: DDDDDD
axes.linewidth: 3
axes.titleweight: bold
axes.titlecolor: 333333
axes.titlepad: 10.0
axes.labelweight: bold
axes.labelcolor: 333333
axes.labelpad: 10.0

xaxis.labellocation: left
yaxis.labellocation: top

### Grid
axes.grid: False
grid.linestyle: -
grid.linewidth: 1.0
grid.color: cbcbcb

### Lines
lines.linewidth : 2
lines.markersize : 7
lines.solid_capstyle: butt
lines.markeredgecolor: auto
hatch.linewidth: 0.25
patch.antialiased   : True

### Patches
patch.edgecolor: f0f0f0
patch.linewidth: 0.5
patch.facecolor: gray

### Ticks
xtick.labelcolor: 333333
ytick.labelcolor: 333333

xtick.labelsize: small
ytick.labelsize: small

ytick.color: DDDDDD
xtick.color: DDDDDD

xtick.major.size: 0
xtick.minor.size: 0
ytick.major.size: 0
ytick.minor.size: 0

### Saving figures
path.simplify : True
svg.fonttype: path
savefig.edgecolor: f0f0f0
savefig.facecolor: f0f0f0

### Legend
legend.frameon: True
legend.fontsize: 10
legend.edgecolor: 9c9ca1
legend.fancybox: True

### Figure
figure.figsize: 4, 2.5
figure.subplot.left: 0.125
figure.subplot.bottom: 0.175
figure.subplot.top: 0.95
figure.subplot.right: 0.95
figure.autolayout : False
figure.facecolor: ffffff  # white

## ***************************************************************************
## * FONT                                                                    *
## ***************************************************************************
## The font properties used by `text.Text`.
## See https://matplotlib.org/api/font_manager_api.html for more information
## on font properties.  The 6 font properties used for font matching are
## given below with their default values.
##
## The font.family property can take either a concrete font name (not supported
## when rendering text with usetex), or one of the following five generic
## values:
##     - 'serif' (e.g., Times),
##     - 'sans-serif' (e.g., Helvetica),
##     - 'cursive' (e.g., Zapf-Chancery),
##     - 'fantasy' (e.g., Western), and
##     - 'monospace' (e.g., Courier).
## Each of these values has a corresponding default list of font names
## (font.serif, etc.); the first available font in the list is used.  Note that
## for font.serif, font.sans-serif, and font.monospace, the first element of
## the list (a DejaVu font) will always be used because DejaVu is shipped with
## Matplotlib and is thus guaranteed to be available; the other entries are
## left as examples of other possible values.
##
## The font.style property has three values: normal (or roman), italic
## or oblique.  The oblique style will be used for italic, if it is not
## present.
##
## The font.variant property has two values: normal or small-caps.  For
## TrueType fonts, which are scalable fonts, small-caps is equivalent
## to using a font size of 'smaller', or about 83%% of the current font
## size.
##
## The font.weight property has effectively 13 values: normal, bold,
## bolder, lighter, 100, 200, 300, ..., 900.  Normal is the same as
## 400, and bold is 700.  bolder and lighter are relative values with
## respect to the current weight.
##
## The font.stretch property has 11 values: ultra-condensed,
## extra-condensed, condensed, semi-condensed, normal, semi-expanded,
## expanded, extra-expanded, ultra-expanded, wider, and narrower.  This
## property is not currently implemented.
##
## The font.size property is the default font size for text, given in points.
## 10 pt is the standard value.
##
## Note that font.size controls default text sizes.  To configure
## special text sizes tick labels, axes, labels, title, etc., see the rc
## settings for axes and ticks.  Special text sizes can be defined
## relative to font.size, using the following values: xx-small, x-small,
## small, medium, large, x-large, xx-large, larger, or smaller

### Fonts
mathtext.fontset : cm
font.family: sans-serif
font.style: normal
font.variant: normal
font.weight: semibold
font.stretch: normal
font.serif: DejaVu Serif, Bitstream Vera Serif, Computer Modern Roman, New Century Schoolbook, Century Schoolbook L, Utopia, ITC Bookman, Bookman, Nimbus Roman No9 L, Times New Roman, Times, Palatino, Charter, serif
font.sans-serif: Roboto, Helvetica, Arial, sans-serif
font.cursive: Apple Chancery, Textile, Zapf Chancery, Sand, Script MT, Felipa, Comic Neue, Comic Sans MS, cursive
font.fantasy: Chicago, Charcoal, Impact, Western, Humor Sans, xkcd, fantasy
font.monospace: DejaVu Sans Mono, Bitstream Vera Sans Mono, Computer Modern Typewriter, Andale Mono, Nimbus Mono L, Courier New, Courier, Fixed, Terminal, monospace


## ***************************************************************************
## * TEXT                                                                    *
## ***************************************************************************
## The text properties used by `text.Text`.
## See https://matplotlib.org/api/artist_api.html#module-matplotlib.text
## for more information on text properties
#text.color: black